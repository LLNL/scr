.TH scr_halt 1  "" "SCR" "SCR"

.SH NAME
scr_halt \- set or modify halt conditions of an SCR job

.SH SYNOPSIS
.B scr_halt [options] [jobid ...]

.SH DESCRIPTION
The \fBscr_halt\fR command is used to instruct an actively running SCR
job to safely exit.  The job can be instructed to exit after its next
successful checkpoint, exit before or after a specified time, or exit
immediately.

.SH OPTIONS
.TP
.BI "-z, --all"
Halt all jobs on the system.
.TP
.BI "-u, --user " LIST
Halt jobs for a comma-separated \fILIST\fR of users.
.TP
.BI "-c, --checkpoints " N
Halt job after \fIN\fR checkpoints.
.TP
.BI "-b, --before " TIME
Halt job before specified \fITIME\fR.  Uses SCR_HALT_SECONDS if set.
.TP
.BI "-a, --after " TIME
Halt job after specified \fITIME\fR.
.TP
.BI "-i, --immediate"
Halt job immediately.
.TP
.BI "-s, --seconds " N
Set or reset SCR_HALT_SECONDS for active job.
.TP
.BI "-l, --list"
List the current halt conditions specified for a job or jobs.
.TP
.BI "--unset-checkpoints"
Unset any checkpoint halt condition.
.TP
.BI "--unset-before"
Unset any halt before condition.
.TP
.BI "--unset-after"
Unset halt after condition.
.TP
.BI "--unset-seconds"
Unset halt seconds.
.TP
.BI "--unset-reason"
Unset the current halt reason
.TP
.BI "-r, --remove"
Remove halt file from nodes in job allocation.
.TP
.BI "-e, --every"
Write halt file to every node in job allocation.
.TP
.BI "-v, --verbose"
Increase verbosity.
.TP
.BI "-h, --help"
Print usage.
.LP
LIST refers to a comma-separated list of words. All options which take a
LIST argument may also be specified multiple times
(e.g. --user=sally,tim --user=frank).
.LP
TIME arguments are parsed using the perl Date::Manip(3pm) package,
and thus may be specified in one of many formats.
Examples include '12pm', 'yesterday,noon', '12/25-15:30:33', and so on.
See the Date::Manip(3pm) manpage for more examples.
.LP
If no jobid is specified, and \fB--user\fR and \fB--all\fR are not given,
then SLURM_JOBID is used if set.  This feature is convenient when invoking
the command in job batch scripts.

.SH EXAMPLES
.TP
(1) Instruct job 1234 to exit after completing its next successful checkpoint:
.nf
>> scr_halt 1234
.fi
.TP
(2) Instruct all my jobs (username3) to exit after completing their next successful checkpoint:
.nf
>> scr_halt -u username3
.fi
.TP
(3) Instruct job 1234 to exit after completing 10 checkpoints:
.nf
>> scr_halt -c 10 1234
.fi
.TP
(4) Instruct job 1234 to exit after "12:00pm today":
.nf
>> scr_halt -a '12:00pm today' 1234
.fi
.TP
(5) Instruct job 1234 to exit before "8:30am tomorrow":
.nf
>> scr_halt -b '8:30am tomorrow' 1234
.fi
.TP
(6) Instruct job 1234 to exit before "12pm Aug 10":
.nf
>> scr_halt -b '12pm 8/10' 1234
.fi
.TP
(7) Instruct job 1234 to exit immediately:
.nf
>> scr_halt -i 1234
.fi
.TP
(8) Instruct job 1234 to exit after 10 checkpoints or before "8:30am tomorrow", which ever comes earlier:
.nf
>> scr_halt -c 10 -b '8:30am tomorrow' 1234
.fi
.TP
(9) Set SCR_HALT_SECONDS to 1800 on job 1234:
.nf
>> scr_halt -s 1800 1234
.fi
.TP
(10) Remove the halt file from job 1234:
.nf
>> scr_halt -r 1234
.fi

.SH SEE ALSO
\fISCR User Manual\fR
.LP
\fBscr\fR(1), \fBscr_srun\fR(1), \fBscr_prerun\fR(1),
\fBscr_postrun\fR(1), \fBscr_index\fR(1)

.SH AUTHOR
Adam Moody <moody20@llnl.gov>.
