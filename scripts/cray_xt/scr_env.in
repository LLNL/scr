#!/usr/bin/perl -w
use strict;
use Getopt::Long qw/ :config gnu_getopt ignore_case /;
use lib '@X_DATADIR@/scr';
use scr_hostlist;

my $prog = "scr_env";
my $nidfile = "/proc/cray_xt/nid";
my $xtprocadmin = "xtprocadmin";

my $bin = "@X_BINDIR@";
my $scr_nodes_file = "$bin/scr_nodes_file";

sub print_usage
{
  print "\n";
  print "  Usage:  $prog [options]\n";
  print "\n";
  print "  Options:\n";
  print "    -u, --user     List the username of current job.\n";
  print "    -j, --jobid    List the job id of the current job.\n";
  print "    -n, --nodes    List the nodeset the current job is using.\n";
  print "    -d, --down     List any nodes of the job's nodeset that\n";
  print "                     the resource managers knows to be down.\n";
  print "    -p, --prefix   Specify the prefix directory.\n";
  print "    -r, --runnodes List the number of nodes used in the last run.\n";
  print "    -o, --hostnames List the nodeset of the job as returned by 'hostname'.\n";
  print "\n";
  exit 1;
}

sub get_job_nodes {
  # get the nodeset of the current job in 'atlas[30-33,35,45-53]' form
  my $shortnodes;
  if (defined $ENV{PBS_NUM_NODES}) {
    # need to get number of nodes in allocation
    my($nodecount) = $ENV{PBS_NUM_NODES};
    # then do aprun -n X -N 1  cat /proc/cray_xt/nid
    #my($cmd) = "aprun -n $nodecount -N 1 cat $nidfile";
    my $nodestr  = `aprun -n $nodecount -N 1 cat $nidfile`;
    my @nodearray = split("\n",$nodestr);
    if ($nodearray[-1] =~ m/^Application/){
       pop(@nodearray); # remove output about application resource usage
    }
    # if argument "short" given, we compress the node list
    if($_[0] eq "short"){
       $shortnodes = scr_hostlist::compress(@nodearray);
    }
    else{
      $shortnodes = join(",", @nodearray);
    }
  } else {
    exit 1;
  }
  $shortnodes;
}

# read in the command line options
my %conf = ();
$conf{user}  = undef;
$conf{jobid} = undef;
$conf{nodes} = undef;
$conf{hostnames} = undef;
$conf{down}  = undef;
$conf{prefix}  = undef;
$conf{runnodes} = undef;
$conf{help}  = undef;
my $rc = GetOptions (
  "user|u"         => \$conf{user},
  "jobid|j"        => \$conf{jobid},
  "nodes|n"        => \$conf{nodes},
  "down|d"         => \$conf{down},
  "prefix|p=s"    => \$conf{prefix},
  "runnodes|r"     => \$conf{runnodes},
  "hostnames|o"     => \$conf{hostnames},
  "help|h"         => \$conf{help},
);
if ($conf{help} or not $rc) {
  print_usage();
}

if (defined $conf{user}) {
  # print the username of the current job
  if (defined $ENV{USER}) {
    print "$ENV{USER}\n";
  } else {
    exit 1;
  }
} elsif (defined $conf{jobid}) {
  # print the jobid of the current job
  if (defined $ENV{PBS_JOBID}) {
    print "$ENV{PBS_JOBID}\n";
  } else {
    # failed to read jobid from environment,
    # assume user is running in test mode
    print "defjobid\n";
  }
} elsif (defined $conf{nodes}) {
  # print the nodeset of the current job in 'atlas[30-33,35,45-53]' form
   my $nodes = get_job_nodes("short");
   print "$nodes\n";
} elsif (defined $conf{hostnames}){
   # get the names of the nodes in the current job as returned by hostname
   # because for some reason, the nodes have two different names
  if (defined $ENV{PBS_NUM_NODES}) {
    # need to get number of nodes in allocation
    my $nodecount = $ENV{PBS_NUM_NODES};
    # then do aprun -n X -N 1  hostname
    my $nodestr = `aprun -n $nodecount -N 1 hostname`;
    my @nodearray = split("\n",$nodestr);
    if ($nodearray[-1] =~ m/^Application/){
      pop(@nodearray); # remove output about application resource usage
    }
    my $shortnodes = scr_hostlist::compress(@nodearray);
    print "$shortnodes\n";
  } else {
    exit 1;
  }
} elsif (defined $conf{down}) {
  # if the resource manager knows any nodes to be down out of the job's
  # nodeset, print this list in 'atlas[30-33,35,45-53]' form
  # if there are none, print nothing, not even a newline
 
  my @downnodes; 
  my $snodes = get_job_nodes("long"); # long means don't compress names
  my @nodes = split(",", $snodes);
  foreach my $node (@nodes) {
    my $result = `$xtprocadmin -n $node`;
    ##print $result;
    my @resarray = split("\n",$result);
    my @answerarray = split(' ',$resarray[1]);
    ##print @answerarray;
    my $answer = $answerarray[4];
    ##print $answer;
    if (index($answer, "down") != -1){
       push(@downnodes, $node);
    }
  }
  my $count = @downnodes; # how many down?
  if ($count > 0){
    my $shortnodes = scr_hostlist::compress(@downnodes);
    print "$shortnodes\n";
  }
  exit 1;
} elsif (defined $conf{runnodes} and defined $conf{prefix}) {
  # get an object to read a hash file
  # and read the nodes.scrinfo file
  my $nodes = `aprun -n 1 $scr_nodes_file --dir $conf{prefix}`;
  if ($? == 0) {
    chomp $nodes;
    print "$nodes\n";
    exit 0;
  } else {
    # had a problem executing scr_nodes_file command
    print "0\n";
    exit 1;
  }
} else {
  # did not specify and option, print the usage
  print_usage();
}

exit 0;
